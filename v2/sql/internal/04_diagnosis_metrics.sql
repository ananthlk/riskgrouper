-- Diagnosis flags for major ABD conditions using HCC codes
-- Flags: diabetes, mental health, cardiovascular, pulmonary, kidney, SUD, other complex
CREATE OR REPLACE TABLE TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_CONDITION_FLAGS AS
SELECT
  a.FH_ID,
  mm.EFFECTIVE_MONTH_START,
  -- Diabetes flag
  MAX(CASE WHEN hcc.HCC_CODE IN (36, 37, 38) THEN 1 ELSE 0 END) AS HAS_DIABETES,
  -- Mental health flag
  MAX(CASE WHEN hcc.HCC_CODE IN (151, 152, 153, 154, 155) THEN 1 ELSE 0 END) AS HAS_MENTAL_HEALTH,
  -- Cardiovascular flag
  MAX(CASE WHEN hcc.HCC_CODE IN (222, 223, 224, 249, 263, 264) THEN 1 ELSE 0 END) AS HAS_CARDIOVASCULAR,
  -- Pulmonary flag
  MAX(CASE WHEN hcc.HCC_CODE IN (277, 279, 280) THEN 1 ELSE 0 END) AS HAS_PULMONARY,
  -- Kidney flag
  MAX(CASE WHEN hcc.HCC_CODE IN (326, 327, 328, 329) THEN 1 ELSE 0 END) AS HAS_KIDNEY,
  -- Substance use disorder flag
  MAX(CASE WHEN hcc.HCC_CODE IN (135, 136, 137, 139) THEN 1 ELSE 0 END) AS HAS_SUD,
  -- Other complex condition flag
  MAX(CASE WHEN hcc.HCC_CODE IS NOT NULL AND hcc.HCC_CODE NOT IN (36, 37, 38, 151, 152, 153, 154, 155, 222, 223, 224, 249, 263, 264, 277, 279, 280, 326, 327, 328, 329, 135, 136, 137, 139) THEN 1 ELSE 0 END) AS HAS_OTHER_COMPLEX
FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS a
JOIN TRANSFORMED_DATA._TEMP.INT_MEMBER_MONTHS_ORDERED mm ON a.FH_ID = mm.FH_ID
LEFT OUTER JOIN TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_DIAGNOSIS DIAG ON DIAG.FH_ID = A.FH_ID
LEFT OUTER JOIN TRANSFORMED_DATA.PROD_STAGING.DIM_ICD_CMS_HCC_MAP hcc
  ON REPLACE(DIAG.ICD10CM_CODE,'.','') = REPLACE(hcc.DIAGNOSIS_CODE,'.','')
  AND MODEL_VERSION='CMS-HCC-V28' AND PAYMENT_YEAR=2024
GROUP BY a.FH_ID, mm.EFFECTIVE_MONTH_START;

-- For each member and month, flag if each ABD condition was diagnosed for the first time in that month
CREATE OR REPLACE TABLE TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_CONDITION_FIRST_DIAGNOSIS AS
with first_diag_dates as (
  SELECT
  FH_ID,
    MIN(IFF(HAS_DIABETES =1 ,EFFECTIVE_MONTH_START ,null )) AS FIRST_DIABETES_DATE,
    MIN(IFF(HAS_MENTAL_HEALTH =1 ,EFFECTIVE_MONTH_START ,null )) AS FIRST_MENTAL_HEALTH_DATE,
    MIN(IFF(HAS_CARDIOVASCULAR =1 ,EFFECTIVE_MONTH_START ,null )) AS FIRST_CARDIOVASCULAR_DATE,
    MIN(IFF(HAS_PULMONARY =1 ,EFFECTIVE_MONTH_START ,null )) AS FIRST_PULMONARY_DATE,
    MIN(IFF(HAS_KIDNEY =1 ,EFFECTIVE_MONTH_START ,null )) AS FIRST_KIDNEY_DATE,
    MIN(IFF(HAS_SUD =1 ,EFFECTIVE_MONTH_START ,null )) AS FIRST_SUD_DATE,
    MIN(IFF(HAS_OTHER_COMPLEX =1 ,EFFECTIVE_MONTH_START ,null )) AS FIRST_OTHER_COMPLEX_DATE

  --CASE WHEN FIRST_DIABETES_DATE = EFFECTIVE_MONTH_START THEN 1 ELSE 0 END AS FIRST_DIAGNOSIS_DIABETES
  FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_CONDITION_FLAGS
  GROUP BY FH_ID
)
select 
a.fh_id,
mm.effective_month_start,
CASE WHEN FIRST_DIABETES_DATE = EFFECTIVE_MONTH_START THEN 1 ELSE 0 END AS FIRST_DIAGNOSIS_DIABETES,
CASE WHEN FIRST_MENTAL_HEALTH_DATE = EFFECTIVE_MONTH_START THEN 1 ELSE 0 END AS FIRST_DIAGNOSIS_MENTAL_HEALTH,
CASE WHEN FIRST_CARDIOVASCULAR_DATE = EFFECTIVE_MONTH_START THEN 1 ELSE 0 END AS FIRST_DIAGNOSIS_CARDIOVASCULAR,
CASE WHEN FIRST_PULMONARY_DATE = EFFECTIVE_MONTH_START THEN 1 ELSE 0 END AS FIRST_DIAGNOSIS_PULMONARY,
CASE WHEN FIRST_KIDNEY_DATE = EFFECTIVE_MONTH_START THEN 1 ELSE 0 END AS FIRST_DIAGNOSIS_KIDNEY,
CASE WHEN FIRST_SUD_DATE = EFFECTIVE_MONTH_START THEN 1 ELSE 0 END AS FIRST_DIAGNOSIS_SUD,
CASE WHEN FIRST_OTHER_COMPLEX_DATE = EFFECTIVE_MONTH_START THEN 1 ELSE 0 END AS FIRST_DIAGNOSIS_OTHER_COMPLEX
FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS a
JOIN TRANSFORMED_DATA._TEMP.INT_MEMBER_MONTHS_ORDERED mm ON a.FH_ID = mm.FH_ID
left outer join first_diag_dates fd on fd.fh_id = a.fh_id ;
-- Add further diagnosis feature engineering, summary, and validation queries below as needed.



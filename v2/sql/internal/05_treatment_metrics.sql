USE DATABASE TRANSFORMED_DATA;
USE SCHEMA _TEMP;

SET member_months_table = 'TRANSFORMED_DATA._TEMP.INT_MEMBER_MONTHS_ORDERED';

-- ABD Condition Diagnosis & Treatment Requirement Module
-- 1. For each member and month, determine if diagnosed (prior or in that month)
CREATE OR REPLACE TABLE TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_DIAGNOSIS_STATUS AS
SELECT
  a.FH_ID,
  mm.EFFECTIVE_MONTH_START,
  -- For each condition, flag if diagnosed prior or in this month
  MAX(CASE WHEN hcc.HCC_CODE IN (36, 37, 38) AND c.CLAIM_START_DATE <= mm.EFFECTIVE_MONTH_START THEN 1 ELSE 0 END) AS DIAGNOSED_DIABETES,
  MAX(CASE WHEN hcc.HCC_CODE IN (151, 152, 153, 154, 155) AND c.CLAIM_START_DATE <= mm.EFFECTIVE_MONTH_START THEN 1 ELSE 0 END) AS DIAGNOSED_MENTAL_HEALTH,
  MAX(CASE WHEN hcc.HCC_CODE IN (222, 223, 224, 249, 263, 264) AND c.CLAIM_START_DATE <= mm.EFFECTIVE_MONTH_START THEN 1 ELSE 0 END) AS DIAGNOSED_CARDIOVASCULAR,
  MAX(CASE WHEN hcc.HCC_CODE IN (277, 279, 280) AND c.CLAIM_START_DATE <= mm.EFFECTIVE_MONTH_START THEN 1 ELSE 0 END) AS DIAGNOSED_PULMONARY,
  MAX(CASE WHEN hcc.HCC_CODE IN (326, 327, 328, 329) AND c.CLAIM_START_DATE <= mm.EFFECTIVE_MONTH_START THEN 1 ELSE 0 END) AS DIAGNOSED_KIDNEY,
  MAX(CASE WHEN hcc.HCC_CODE IN (135, 136, 137, 139) AND c.CLAIM_START_DATE <= mm.EFFECTIVE_MONTH_START THEN 1 ELSE 0 END) AS DIAGNOSED_SUD,
  MAX(CASE WHEN hcc.HCC_CODE IS NOT NULL AND hcc.HCC_CODE NOT IN (36, 37, 38, 151, 152, 153, 154, 155, 222, 223, 224, 249, 263, 264, 277, 279, 280, 326, 327, 328, 329, 135, 136, 137, 139) AND c.CLAIM_START_DATE <= mm.EFFECTIVE_MONTH_START THEN 1 ELSE 0 END) AS DIAGNOSED_OTHER_COMPLEX
FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS a
JOIN TRANSFORMED_DATA._TEMP.INT_MEMBER_MONTHS_ORDERED mm ON a.FH_ID = mm.FH_ID
LEFT JOIN TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_DIAGNOSIS diag ON diag.FH_ID = a.FH_ID
LEFT JOIN TRANSFORMED_DATA.PROD_STAGING.DIM_ICD_CMS_HCC_MAP hcc ON REPLACE(diag.ICD10CM_CODE,'.','') = REPLACE(hcc.DIAGNOSIS_CODE,'.','')
LEFT JOIN TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_CLAIMS c ON diag.FH_ID = c.FH_ID AND diag.URSA_CLAIM_ID = c.CLAIM_ID
GROUP BY a.FH_ID, mm.EFFECTIVE_MONTH_START;

-- 2. Classify treatment requirement
CREATE OR REPLACE TABLE TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_TREATMENT_REQUIREMENT AS
SELECT
  FH_ID,
  EFFECTIVE_MONTH_START,
  -- If not diagnosed, treatment_required = 0; if diagnosed, treatment_required = 1
  IFF(DIAGNOSED_DIABETES = 1, 1, 0) AS DIABETES_TREATMENT_REQUIRED,
  IFF(DIAGNOSED_MENTAL_HEALTH = 1, 1, 0) AS MH_TREATMENT_REQUIRED,
  IFF(DIAGNOSED_CARDIOVASCULAR = 1, 1, 0) AS CARDIO_TREATMENT_REQUIRED,
  IFF(DIAGNOSED_PULMONARY = 1, 1, 0) AS PULMONARY_TREATMENT_REQUIRED,
  IFF(DIAGNOSED_KIDNEY = 1, 1, 0) AS KIDNEY_TREATMENT_REQUIRED,
  IFF(DIAGNOSED_SUD = 1, 1, 0) AS SUD_TREATMENT_REQUIRED,
  IFF(DIAGNOSED_OTHER_COMPLEX = 1, 1, 0) AS OTHER_COMPLEX_TREATMENT_REQUIRED
FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_DIAGNOSIS_STATUS;

-- 3. For those with treatment required, calculate treatment metrics
CREATE OR REPLACE TABLE TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_TREATMENT_METRICS AS
WITH member_months AS (
  SELECT FH_ID, EFFECTIVE_MONTH_START FROM IDENTIFIER($member_months_table)
),
claims_diag_hcc AS (
  SELECT
    c.FH_ID,
    DATE_TRUNC('MONTH', c.CLAIM_START_DATE) AS CLAIM_MONTH,
    c.CLAIM_START_DATE,
    d.DX_LINE_NUMBER,
    hcc.HCC_CODE,
    c.CMS_PLACE_OF_SERVICE_CODE
  FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_CLAIMS c
  LEFT JOIN TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_DIAGNOSIS d ON c.FH_ID = d.FH_ID AND c.CLAIM_ID = d.URSA_CLAIM_ID
  LEFT JOIN TRANSFORMED_DATA.PROD_STAGING.DIM_ICD_CMS_HCC_MAP hcc ON REPLACE(d.ICD10CM_CODE,'.','') = REPLACE(hcc.DIAGNOSIS_CODE,'.','')
  WHERE d.DX_LINE_NUMBER IN (1,2)
    AND c.CMS_PLACE_OF_SERVICE_CODE IN ('11', '22', '49', '50')
),
treatment_flags AS (
  SELECT
    mm.FH_ID,
    mm.EFFECTIVE_MONTH_START,
    -- Diabetes
    MAX(IFF(cd.HCC_CODE IN (36, 37, 38) AND cd.CLAIM_START_DATE < mm.EFFECTIVE_MONTH_START, 1, 0)) AS DIABETES_EVER_TREATED,
    MAX(IFF(cd.HCC_CODE IN (36, 37, 38) AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START, 1, 0)) AS DIABETES_TREATED_LAST_3_MONTHS,
    MAX(IFF(cd.HCC_CODE IN (36, 37, 38) AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START, 1, 0)) AS DIABETES_TREATED_THIS_MONTH,
    -- Mental Health
    MAX(IFF(cd.HCC_CODE IN (151, 152, 153, 154, 155) AND cd.CLAIM_START_DATE < mm.EFFECTIVE_MONTH_START, 1, 0)) AS MH_EVER_TREATED,
    MAX(IFF(cd.HCC_CODE IN (151, 152, 153, 154, 155) AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START, 1, 0)) AS MH_TREATED_LAST_3_MONTHS,
    MAX(IFF(cd.HCC_CODE IN (151, 152, 153, 154, 155) AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START, 1, 0)) AS MH_TREATED_THIS_MONTH,
    -- Cardiovascular
    MAX(IFF(cd.HCC_CODE IN (222, 223, 224, 249, 263, 264) AND cd.CLAIM_START_DATE < mm.EFFECTIVE_MONTH_START, 1, 0)) AS CARDIO_EVER_TREATED,
    MAX(IFF(cd.HCC_CODE IN (222, 223, 224, 249, 263, 264) AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START, 1, 0)) AS CARDIO_TREATED_LAST_3_MONTHS,
    MAX(IFF(cd.HCC_CODE IN (222, 223, 224, 249, 263, 264) AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START, 1, 0)) AS CARDIO_TREATED_THIS_MONTH,
    -- Pulmonary
    MAX(IFF(cd.HCC_CODE IN (277, 279, 280) AND cd.CLAIM_START_DATE < mm.EFFECTIVE_MONTH_START, 1, 0)) AS PULMONARY_EVER_TREATED,
    MAX(IFF(cd.HCC_CODE IN (277, 279, 280) AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START, 1, 0)) AS PULMONARY_TREATED_LAST_3_MONTHS,
    MAX(IFF(cd.HCC_CODE IN (277, 279, 280) AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START, 1, 0)) AS PULMONARY_TREATED_THIS_MONTH,
    -- Kidney
    MAX(IFF(cd.HCC_CODE IN (326, 327, 328, 329) AND cd.CLAIM_START_DATE < mm.EFFECTIVE_MONTH_START, 1, 0)) AS KIDNEY_EVER_TREATED,
    MAX(IFF(cd.HCC_CODE IN (326, 327, 328, 329) AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START, 1, 0)) AS KIDNEY_TREATED_LAST_3_MONTHS,
    MAX(IFF(cd.HCC_CODE IN (326, 327, 328, 329) AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START, 1, 0)) AS KIDNEY_TREATED_THIS_MONTH,
    -- SUD
    MAX(IFF(cd.HCC_CODE IN (135, 136, 137, 139) AND cd.CLAIM_START_DATE < mm.EFFECTIVE_MONTH_START, 1, 0)) AS SUD_EVER_TREATED,
    MAX(IFF(cd.HCC_CODE IN (135, 136, 137, 139) AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START, 1, 0)) AS SUD_TREATED_LAST_3_MONTHS,
    MAX(IFF(cd.HCC_CODE IN (135, 136, 137, 139) AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START, 1, 0)) AS SUD_TREATED_THIS_MONTH,
    -- Other Complex
    MAX(IFF(cd.HCC_CODE IS NOT NULL AND cd.HCC_CODE NOT IN (36, 37, 38, 151, 152, 153, 154, 155, 222, 223, 224, 249, 263, 264, 277, 279, 280, 326, 327, 328, 329, 135, 136, 137, 139)
      AND cd.CLAIM_START_DATE < mm.EFFECTIVE_MONTH_START, 1, 0)) AS OTHER_COMPLEX_EVER_TREATED,
    MAX(IFF(cd.HCC_CODE IS NOT NULL AND cd.HCC_CODE NOT IN (36, 37, 38, 151, 152, 153, 154, 155, 222, 223, 224, 249, 263, 264, 277, 279, 280, 326, 327, 328, 329, 135, 136, 137, 139)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START, 1, 0)) AS OTHER_COMPLEX_TREATED_LAST_3_MONTHS,
    MAX(IFF(cd.HCC_CODE IS NOT NULL AND cd.HCC_CODE NOT IN (36, 37, 38, 151, 152, 153, 154, 155, 222, 223, 224, 249, 263, 264, 277, 279, 280, 326, 327, 328, 329, 135, 136, 137, 139)
      AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START, 1, 0)) AS OTHER_COMPLEX_TREATED_THIS_MONTH
  FROM member_months mm
  LEFT JOIN claims_diag_hcc cd ON mm.FH_ID = cd.FH_ID
  GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
)
SELECT * FROM treatment_flags;

-- Combined ABD Condition Treatment Requirement & Treatment Metrics Table
CREATE OR REPLACE TABLE TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_TREATMENT_SUMMARY AS
SELECT
  tr.FH_ID,
  tr.EFFECTIVE_MONTH_START,
  -- Diabetes
  tr.DIABETES_TREATMENT_REQUIRED,
  tm.DIABETES_EVER_TREATED,
  tm.DIABETES_TREATED_LAST_3_MONTHS,
  tm.DIABETES_TREATED_THIS_MONTH,
  -- Mental Health
  tr.MH_TREATMENT_REQUIRED,
  tm.MH_EVER_TREATED,
  tm.MH_TREATED_LAST_3_MONTHS,
  tm.MH_TREATED_THIS_MONTH,
  -- Cardiovascular
  tr.CARDIO_TREATMENT_REQUIRED,
  tm.CARDIO_EVER_TREATED,
  tm.CARDIO_TREATED_LAST_3_MONTHS,
  tm.CARDIO_TREATED_THIS_MONTH,
  -- Pulmonary
  tr.PULMONARY_TREATMENT_REQUIRED,
  tm.PULMONARY_EVER_TREATED,
  tm.PULMONARY_TREATED_LAST_3_MONTHS,
  tm.PULMONARY_TREATED_THIS_MONTH,
  -- Kidney
  tr.KIDNEY_TREATMENT_REQUIRED,
  tm.KIDNEY_EVER_TREATED,
  tm.KIDNEY_TREATED_LAST_3_MONTHS,
  tm.KIDNEY_TREATED_THIS_MONTH,
  -- SUD
  tr.SUD_TREATMENT_REQUIRED,
  tm.SUD_EVER_TREATED,
  tm.SUD_TREATED_LAST_3_MONTHS,
  tm.SUD_TREATED_THIS_MONTH,
  -- Other Complex
  tr.OTHER_COMPLEX_TREATMENT_REQUIRED,
  tm.OTHER_COMPLEX_EVER_TREATED,
  tm.OTHER_COMPLEX_TREATED_LAST_3_MONTHS,
  tm.OTHER_COMPLEX_TREATED_THIS_MONTH
FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_TREATMENT_REQUIREMENT tr
LEFT JOIN TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_TREATMENT_METRICS tm
  ON tr.FH_ID = tm.FH_ID AND tr.EFFECTIVE_MONTH_START = tm.EFFECTIVE_MONTH_START;

USE DATABASE TRANSFORMED_DATA;
USE SCHEMA _TEMP;

SET member_months_table = 'TRANSFORMED_DATA._TEMP.INT_MEMBER_MONTHS_ORDERED';

-- ABD Condition Coordinated Care Metrics (Snowflake compatible)
-- All CTEs must be in a single WITH clause
CREATE OR REPLACE TABLE TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_CARE_COORDINATION_SUMMARY AS
WITH member_months AS (
  SELECT FH_ID, EFFECTIVE_MONTH_START FROM IDENTIFIER($member_months_table)
),
  treatment_required AS (
    SELECT
      tr.FH_ID,
      tr.EFFECTIVE_MONTH_START,
      tr.DIABETES_TREATMENT_REQUIRED,
      tr.MH_TREATMENT_REQUIRED,
      tr.CARDIO_TREATMENT_REQUIRED,
      tr.PULMONARY_TREATMENT_REQUIRED,
      tr.KIDNEY_TREATMENT_REQUIRED,
      tr.SUD_TREATMENT_REQUIRED,
      tr.OTHER_COMPLEX_TREATMENT_REQUIRED
    FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_ABD_TREATMENT_REQUIREMENT tr
  ),
  claims_diag_hcc_tin AS (
    SELECT
      c.FH_ID,
      DATE_TRUNC('MONTH', c.CLAIM_START_DATE) AS CLAIM_MONTH,
      c.CLAIM_START_DATE,
      d.DX_LINE_NUMBER,
      hcc.HCC_CODE,
      c.CMS_PLACE_OF_SERVICE_CODE,
      d.BILLING_PROVIDER_TIN
    FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_CLAIMS c
    LEFT JOIN TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_DIAGNOSIS d ON c.FH_ID = d.FH_ID AND c.CLAIM_ID = d.URSA_CLAIM_ID
    LEFT JOIN TRANSFORMED_DATA.PROD_STAGING.DIM_ICD_CMS_HCC_MAP hcc ON REPLACE(d.ICD10CM_CODE,'.','') = REPLACE(hcc.DIAGNOSIS_CODE,'.','')
    WHERE d.DX_LINE_NUMBER IN (1,2)
      AND c.CMS_PLACE_OF_SERVICE_CODE IN ('11', '22', '49', '50')
  ),
  diabetes_tin_counts AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      COUNT(DISTINCT cd.BILLING_PROVIDER_TIN) AS DIABETES_TIN_COUNT_LAST_3_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (36, 37, 38)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  mh_tin_counts AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      COUNT(DISTINCT cd.BILLING_PROVIDER_TIN) AS MH_TIN_COUNT_LAST_3_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (151, 152, 153, 154, 155)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  cardio_tin_counts AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      COUNT(DISTINCT cd.BILLING_PROVIDER_TIN) AS CARDIO_TIN_COUNT_LAST_3_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (222, 223, 224, 249, 263, 264)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  pulmonary_tin_counts AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      COUNT(DISTINCT cd.BILLING_PROVIDER_TIN) AS PULMONARY_TIN_COUNT_LAST_3_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (277, 279, 280)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  kidney_tin_counts AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      COUNT(DISTINCT cd.BILLING_PROVIDER_TIN) AS KIDNEY_TIN_COUNT_LAST_3_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (326, 327, 328, 329)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  sud_tin_counts AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      COUNT(DISTINCT cd.BILLING_PROVIDER_TIN) AS SUD_TIN_COUNT_LAST_3_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (135, 136, 137, 139)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  other_complex_tin_counts AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      COUNT(DISTINCT cd.BILLING_PROVIDER_TIN) AS OTHER_COMPLEX_TIN_COUNT_LAST_3_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IS NOT NULL AND cd.HCC_CODE NOT IN (36, 37, 38, 151, 152, 153, 154, 155, 222, 223, 224, 249, 263, 264, 277, 279, 280, 326, 327, 328, 329, 135, 136, 137, 139)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND mm.EFFECTIVE_MONTH_START
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  diabetes_tins_current_month AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_THIS_MONTH
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (36, 37, 38)
      AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  diabetes_tins_prev_2_months AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_PREV_2_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (36, 37, 38)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND DATEADD('MONTH', -1, mm.EFFECTIVE_MONTH_START) AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  -- Repeat for other conditions
  mh_tins_current_month AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_THIS_MONTH
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (151, 152, 153, 154, 155)
      AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  mh_tins_prev_2_months AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_PREV_2_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (151, 152, 153, 154, 155)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND DATEADD('MONTH', -1, mm.EFFECTIVE_MONTH_START) AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  cardio_tins_current_month AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_THIS_MONTH
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (222, 223, 224, 249, 263, 264)
      AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  cardio_tins_prev_2_months AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_PREV_2_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (222, 223, 224, 249, 263, 264)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND DATEADD('MONTH', -1, mm.EFFECTIVE_MONTH_START) AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  pulmonary_tins_current_month AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_THIS_MONTH
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (277, 279, 280)
      AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  pulmonary_tins_prev_2_months AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_PREV_2_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (277, 279, 280)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND DATEADD('MONTH', -1, mm.EFFECTIVE_MONTH_START) AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  kidney_tins_current_month AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_THIS_MONTH
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (326, 327, 328, 329)
      AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  kidney_tins_prev_2_months AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_PREV_2_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (326, 327, 328, 329)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND DATEADD('MONTH', -1, mm.EFFECTIVE_MONTH_START) AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  sud_tins_current_month AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_THIS_MONTH
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (135, 136, 137, 139)
      AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  sud_tins_prev_2_months AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_PREV_2_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IN (135, 136, 137, 139)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND DATEADD('MONTH', -1, mm.EFFECTIVE_MONTH_START) AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  other_complex_tins_current_month AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_THIS_MONTH
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IS NOT NULL AND cd.HCC_CODE NOT IN (36, 37, 38, 151, 152, 153, 154, 155, 222, 223, 224, 249, 263, 264, 277, 279, 280, 326, 327, 328, 329, 135, 136, 137, 139)
      AND cd.CLAIM_MONTH = mm.EFFECTIVE_MONTH_START AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  other_complex_tins_prev_2_months AS (
    SELECT mm.FH_ID, mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_PREV_2_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd ON mm.FH_ID = cd.FH_ID AND cd.HCC_CODE IS NOT NULL AND cd.HCC_CODE NOT IN (36, 37, 38, 151, 152, 153, 154, 155, 222, 223, 224, 249, 263, 264, 277, 279, 280, 326, 327, 328, 329, 135, 136, 137, 139)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND DATEADD('MONTH', -1, mm.EFFECTIVE_MONTH_START) AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  diabetes_tins_prev_2_months AS (
    SELECT
      mm.FH_ID,
      mm.EFFECTIVE_MONTH_START,
      ARRAY_AGG(DISTINCT cd.BILLING_PROVIDER_TIN) AS TINS_PREV_2_MONTHS
    FROM member_months mm
    LEFT JOIN claims_diag_hcc_tin cd
      ON mm.FH_ID = cd.FH_ID
      AND cd.HCC_CODE IN (36, 37, 38)
      AND cd.CLAIM_MONTH BETWEEN DATEADD('MONTH', -2, mm.EFFECTIVE_MONTH_START) AND DATEADD('MONTH', -1, mm.EFFECTIVE_MONTH_START)
      AND cd.BILLING_PROVIDER_TIN IS NOT NULL
    GROUP BY mm.FH_ID, mm.EFFECTIVE_MONTH_START
  ),
  coordinated_care_flags AS (
    SELECT
      mm.FH_ID,
      mm.EFFECTIVE_MONTH_START,
      tr.DIABETES_TREATMENT_REQUIRED,
      CASE WHEN tr.DIABETES_TREATMENT_REQUIRED = 1 THEN CASE WHEN dtc.DIABETES_TIN_COUNT_LAST_3_MONTHS = 1 THEN 1 ELSE 0 END ELSE NULL END AS DIABETES_COORDINATED_CARE_LAST_3_MONTHS,
      CASE WHEN tr.DIABETES_TREATMENT_REQUIRED = 1 THEN CASE WHEN ARRAY_SIZE(dtcurr.TINS_THIS_MONTH) = 0 THEN 0 WHEN ARRAY_SIZE(ARRAY_EXCEPT(dtcurr.TINS_THIS_MONTH, dtprev.TINS_PREV_2_MONTHS)) > 0 THEN 1 ELSE 0 END ELSE NULL END AS DIABETES_NEW_PROVIDER_THIS_MONTH,
      tr.MH_TREATMENT_REQUIRED,
      CASE WHEN tr.MH_TREATMENT_REQUIRED = 1 THEN CASE WHEN mhc.MH_TIN_COUNT_LAST_3_MONTHS = 1 THEN 1 ELSE 0 END ELSE NULL END AS MH_COORDINATED_CARE_LAST_3_MONTHS,
      CASE WHEN tr.MH_TREATMENT_REQUIRED = 1 THEN CASE WHEN ARRAY_SIZE(mhcurr.TINS_THIS_MONTH) = 0 THEN 0 WHEN ARRAY_SIZE(ARRAY_EXCEPT(mhcurr.TINS_THIS_MONTH, mhprev.TINS_PREV_2_MONTHS)) > 0 THEN 1 ELSE 0 END ELSE NULL END AS MH_NEW_PROVIDER_THIS_MONTH,
      tr.CARDIO_TREATMENT_REQUIRED,
      CASE WHEN tr.CARDIO_TREATMENT_REQUIRED = 1 THEN CASE WHEN cardc.CARDIO_TIN_COUNT_LAST_3_MONTHS = 1 THEN 1 ELSE 0 END ELSE NULL END AS CARDIO_COORDINATED_CARE_LAST_3_MONTHS,
      CASE WHEN tr.CARDIO_TREATMENT_REQUIRED = 1 THEN CASE WHEN ARRAY_SIZE(cardcurr.TINS_THIS_MONTH) = 0 THEN 0 WHEN ARRAY_SIZE(ARRAY_EXCEPT(cardcurr.TINS_THIS_MONTH, cardprev.TINS_PREV_2_MONTHS)) > 0 THEN 1 ELSE 0 END ELSE NULL END AS CARDIO_NEW_PROVIDER_THIS_MONTH,
      tr.PULMONARY_TREATMENT_REQUIRED,
      CASE WHEN tr.PULMONARY_TREATMENT_REQUIRED = 1 THEN CASE WHEN pulmc.PULMONARY_TIN_COUNT_LAST_3_MONTHS = 1 THEN 1 ELSE 0 END ELSE NULL END AS PULMONARY_COORDINATED_CARE_LAST_3_MONTHS,
      CASE WHEN tr.PULMONARY_TREATMENT_REQUIRED = 1 THEN CASE WHEN ARRAY_SIZE(pulmcurr.TINS_THIS_MONTH) = 0 THEN 0 WHEN ARRAY_SIZE(ARRAY_EXCEPT(pulmcurr.TINS_THIS_MONTH, pulmprev.TINS_PREV_2_MONTHS)) > 0 THEN 1 ELSE 0 END ELSE NULL END AS PULMONARY_NEW_PROVIDER_THIS_MONTH,
      tr.KIDNEY_TREATMENT_REQUIRED,
      CASE WHEN tr.KIDNEY_TREATMENT_REQUIRED = 1 THEN CASE WHEN kidc.KIDNEY_TIN_COUNT_LAST_3_MONTHS = 1 THEN 1 ELSE 0 END ELSE NULL END AS KIDNEY_COORDINATED_CARE_LAST_3_MONTHS,
      CASE WHEN tr.KIDNEY_TREATMENT_REQUIRED = 1 THEN CASE WHEN ARRAY_SIZE(kidcurr.TINS_THIS_MONTH) = 0 THEN 0 WHEN ARRAY_SIZE(ARRAY_EXCEPT(kidcurr.TINS_THIS_MONTH, kidprev.TINS_PREV_2_MONTHS)) > 0 THEN 1 ELSE 0 END ELSE NULL END AS KIDNEY_NEW_PROVIDER_THIS_MONTH,
      tr.SUD_TREATMENT_REQUIRED,
      CASE WHEN tr.SUD_TREATMENT_REQUIRED = 1 THEN CASE WHEN sudc.SUD_TIN_COUNT_LAST_3_MONTHS = 1 THEN 1 ELSE 0 END ELSE NULL END AS SUD_COORDINATED_CARE_LAST_3_MONTHS,
      CASE WHEN tr.SUD_TREATMENT_REQUIRED = 1 THEN CASE WHEN ARRAY_SIZE(sudcurr.TINS_THIS_MONTH) = 0 THEN 0 WHEN ARRAY_SIZE(ARRAY_EXCEPT(sudcurr.TINS_THIS_MONTH, sudprev.TINS_PREV_2_MONTHS)) > 0 THEN 1 ELSE 0 END ELSE NULL END AS SUD_NEW_PROVIDER_THIS_MONTH,
      tr.OTHER_COMPLEX_TREATMENT_REQUIRED,
      CASE WHEN tr.OTHER_COMPLEX_TREATMENT_REQUIRED = 1 THEN CASE WHEN occ.OTHER_COMPLEX_TIN_COUNT_LAST_3_MONTHS = 1 THEN 1 ELSE 0 END ELSE NULL END AS OTHER_COMPLEX_COORDINATED_CARE_LAST_3_MONTHS,
      CASE WHEN tr.OTHER_COMPLEX_TREATMENT_REQUIRED = 1 THEN CASE WHEN ARRAY_SIZE(occurr.TINS_THIS_MONTH) = 0 THEN 0 WHEN ARRAY_SIZE(ARRAY_EXCEPT(occurr.TINS_THIS_MONTH, ocprev.TINS_PREV_2_MONTHS)) > 0 THEN 1 ELSE 0 END ELSE NULL END AS OTHER_COMPLEX_NEW_PROVIDER_THIS_MONTH
    FROM member_months mm
    LEFT JOIN treatment_required tr ON mm.FH_ID = tr.FH_ID AND mm.EFFECTIVE_MONTH_START = tr.EFFECTIVE_MONTH_START
    LEFT JOIN diabetes_tin_counts dtc ON mm.FH_ID = dtc.FH_ID AND mm.EFFECTIVE_MONTH_START = dtc.EFFECTIVE_MONTH_START
    LEFT JOIN diabetes_tins_current_month dtcurr ON mm.FH_ID = dtcurr.FH_ID AND mm.EFFECTIVE_MONTH_START = dtcurr.EFFECTIVE_MONTH_START
    LEFT JOIN diabetes_tins_prev_2_months dtprev ON mm.FH_ID = dtprev.FH_ID AND mm.EFFECTIVE_MONTH_START = dtprev.EFFECTIVE_MONTH_START
    LEFT JOIN mh_tin_counts mhc ON mm.FH_ID = mhc.FH_ID AND mm.EFFECTIVE_MONTH_START = mhc.EFFECTIVE_MONTH_START
    LEFT JOIN mh_tins_current_month mhcurr ON mm.FH_ID = mhcurr.FH_ID AND mm.EFFECTIVE_MONTH_START = mhcurr.EFFECTIVE_MONTH_START
    LEFT JOIN mh_tins_prev_2_months mhprev ON mm.FH_ID = mhprev.FH_ID AND mm.EFFECTIVE_MONTH_START = mhprev.EFFECTIVE_MONTH_START
    LEFT JOIN cardio_tin_counts cardc ON mm.FH_ID = cardc.FH_ID AND mm.EFFECTIVE_MONTH_START = cardc.EFFECTIVE_MONTH_START
    LEFT JOIN cardio_tins_current_month cardcurr ON mm.FH_ID = cardcurr.FH_ID AND mm.EFFECTIVE_MONTH_START = cardcurr.EFFECTIVE_MONTH_START
    LEFT JOIN cardio_tins_prev_2_months cardprev ON mm.FH_ID = cardprev.FH_ID AND mm.EFFECTIVE_MONTH_START = cardprev.EFFECTIVE_MONTH_START
    LEFT JOIN pulmonary_tin_counts pulmc ON mm.FH_ID = pulmc.FH_ID AND mm.EFFECTIVE_MONTH_START = pulmc.EFFECTIVE_MONTH_START
    LEFT JOIN pulmonary_tins_current_month pulmcurr ON mm.FH_ID = pulmcurr.FH_ID AND mm.EFFECTIVE_MONTH_START = pulmcurr.EFFECTIVE_MONTH_START
    LEFT JOIN pulmonary_tins_prev_2_months pulmprev ON mm.FH_ID = pulmprev.FH_ID AND mm.EFFECTIVE_MONTH_START = pulmprev.EFFECTIVE_MONTH_START
    LEFT JOIN kidney_tin_counts kidc ON mm.FH_ID = kidc.FH_ID AND mm.EFFECTIVE_MONTH_START = kidc.EFFECTIVE_MONTH_START
    LEFT JOIN kidney_tins_current_month kidcurr ON mm.FH_ID = kidcurr.FH_ID AND mm.EFFECTIVE_MONTH_START = kidcurr.EFFECTIVE_MONTH_START
    LEFT JOIN kidney_tins_prev_2_months kidprev ON mm.FH_ID = kidprev.FH_ID AND mm.EFFECTIVE_MONTH_START = kidprev.EFFECTIVE_MONTH_START
    LEFT JOIN sud_tin_counts sudc ON mm.FH_ID = sudc.FH_ID AND mm.EFFECTIVE_MONTH_START = sudc.EFFECTIVE_MONTH_START
    LEFT JOIN sud_tins_current_month sudcurr ON mm.FH_ID = sudcurr.FH_ID AND mm.EFFECTIVE_MONTH_START = sudcurr.EFFECTIVE_MONTH_START
    LEFT JOIN sud_tins_prev_2_months sudprev ON mm.FH_ID = sudprev.FH_ID AND mm.EFFECTIVE_MONTH_START = sudprev.EFFECTIVE_MONTH_START
    LEFT JOIN other_complex_tin_counts occ ON mm.FH_ID = occ.FH_ID AND mm.EFFECTIVE_MONTH_START = occ.EFFECTIVE_MONTH_START
    LEFT JOIN other_complex_tins_current_month occurr ON mm.FH_ID = occurr.FH_ID AND mm.EFFECTIVE_MONTH_START = occurr.EFFECTIVE_MONTH_START
    LEFT JOIN other_complex_tins_prev_2_months ocprev ON mm.FH_ID = ocprev.FH_ID AND mm.EFFECTIVE_MONTH_START = ocprev.EFFECTIVE_MONTH_START
  )
SELECT * FROM coordinated_care_flags;

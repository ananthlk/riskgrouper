-- 08_LAB_SNF.sql
-- Flags for lab work and SNF/residential stays
-- Assumes claims table: TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_CLAIMS
-- Date column: CLAIM_DATE
-- Member/months table: TRANSFORMED_DATA._TEMP.INT_MEMBER_MONTHS_ORDERED




CREATE OR REPLACE TABLE TRANSFORMED_DATA._TEMP.LAB_SNF_METRICS (
    FH_ID VARCHAR,
    EFFECTIVE_MONTH_START DATE,
    LAB_LAST_3_MONTHS INTEGER,
    LAB_LAST_6_MONTHS INTEGER,
    LAB_LAST_12_MONTHS INTEGER,
    SNF_THIS_MONTH INTEGER,
    SNF_LAST_3_MONTHS INTEGER
);


INSERT INTO TRANSFORMED_DATA._TEMP.LAB_SNF_METRICS
WITH lab_claims AS (
    SELECT FH_ID, CLAIM_START_DATE FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_CLAIMS
    WHERE CMS_PLACE_OF_SERVICE_CODE = '81'
),
snf_claims AS (
    SELECT FH_ID, CLAIM_START_DATE FROM TRANSFORMED_DATA._TEMP.AL_REG_ATTRIBUTED_MEMBERS_CLAIMS
    WHERE CMS_PLACE_OF_SERVICE_CODE IN ('31', '32')
),
member_months AS (
    SELECT FH_ID, EFFECTIVE_MONTH_START FROM TRANSFORMED_DATA._TEMP.INT_MEMBER_MONTHS_ORDERED
),
lab_last_3 AS (
    SELECT m.FH_ID, m.EFFECTIVE_MONTH_START,
        CASE WHEN COUNT(l.FH_ID) > 0 THEN 1 ELSE 0 END AS LAB_LAST_3_MONTHS
    FROM member_months m
    LEFT JOIN lab_claims l
      ON l.FH_ID = m.FH_ID
    AND l.CLAIM_START_DATE >= m.EFFECTIVE_MONTH_START - INTERVAL '3 MONTH'
    AND l.CLAIM_START_DATE < m.EFFECTIVE_MONTH_START
    GROUP BY m.FH_ID, m.EFFECTIVE_MONTH_START
),
lab_last_6 AS (
    SELECT m.FH_ID, m.EFFECTIVE_MONTH_START,
        CASE WHEN COUNT(l.FH_ID) > 0 THEN 1 ELSE 0 END AS LAB_LAST_6_MONTHS
    FROM member_months m
    LEFT JOIN lab_claims l
      ON l.FH_ID = m.FH_ID
    AND l.CLAIM_START_DATE >= m.EFFECTIVE_MONTH_START - INTERVAL '6 MONTH'
    AND l.CLAIM_START_DATE < m.EFFECTIVE_MONTH_START
    GROUP BY m.FH_ID, m.EFFECTIVE_MONTH_START
),
lab_last_12 AS (
    SELECT m.FH_ID, m.EFFECTIVE_MONTH_START,
        CASE WHEN COUNT(l.FH_ID) > 0 THEN 1 ELSE 0 END AS LAB_LAST_12_MONTHS
    FROM member_months m
    LEFT JOIN lab_claims l
      ON l.FH_ID = m.FH_ID
    AND l.CLAIM_START_DATE >= m.EFFECTIVE_MONTH_START - INTERVAL '12 MONTH'
    AND l.CLAIM_START_DATE < m.EFFECTIVE_MONTH_START
    GROUP BY m.FH_ID, m.EFFECTIVE_MONTH_START
),
snf_this_month AS (
    SELECT m.FH_ID, m.EFFECTIVE_MONTH_START,
        CASE WHEN COUNT(s.FH_ID) > 0 THEN 1 ELSE 0 END AS SNF_THIS_MONTH
    FROM member_months m
    LEFT JOIN snf_claims s
      ON s.FH_ID = m.FH_ID
    AND s.CLAIM_START_DATE >= m.EFFECTIVE_MONTH_START
    AND s.CLAIM_START_DATE < m.EFFECTIVE_MONTH_START + INTERVAL '1 MONTH'
    GROUP BY m.FH_ID, m.EFFECTIVE_MONTH_START
),
snf_last_3 AS (
    SELECT m.FH_ID, m.EFFECTIVE_MONTH_START,
        CASE WHEN COUNT(s.FH_ID) > 0 THEN 1 ELSE 0 END AS SNF_LAST_3_MONTHS
    FROM member_months m
    LEFT JOIN snf_claims s
      ON s.FH_ID = m.FH_ID
    AND s.CLAIM_START_DATE >= m.EFFECTIVE_MONTH_START - INTERVAL '3 MONTH'
    AND s.CLAIM_START_DATE < m.EFFECTIVE_MONTH_START + INTERVAL '1 MONTH'
    GROUP BY m.FH_ID, m.EFFECTIVE_MONTH_START
)
SELECT
    m.FH_ID,
    m.EFFECTIVE_MONTH_START,
    l3.LAB_LAST_3_MONTHS,
    l6.LAB_LAST_6_MONTHS,
    l12.LAB_LAST_12_MONTHS,
    snf.SNF_THIS_MONTH,
    snf3.SNF_LAST_3_MONTHS
FROM member_months m
LEFT JOIN lab_last_3 l3 ON m.FH_ID = l3.FH_ID AND m.EFFECTIVE_MONTH_START = l3.EFFECTIVE_MONTH_START
LEFT JOIN lab_last_6 l6 ON m.FH_ID = l6.FH_ID AND m.EFFECTIVE_MONTH_START = l6.EFFECTIVE_MONTH_START
LEFT JOIN lab_last_12 l12 ON m.FH_ID = l12.FH_ID AND m.EFFECTIVE_MONTH_START = l12.EFFECTIVE_MONTH_START
LEFT JOIN snf_this_month snf ON m.FH_ID = snf.FH_ID AND m.EFFECTIVE_MONTH_START = snf.EFFECTIVE_MONTH_START
LEFT JOIN snf_last_3 snf3 ON m.FH_ID = snf3.FH_ID AND m.EFFECTIVE_MONTH_START = snf3.EFFECTIVE_MONTH_START;
